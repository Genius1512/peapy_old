import os

import keyboard


VALID_KEYS = (
    "backspace",
    "tab",
    "clear",
    "enter",
    "shift",
    "ctrl",
    "alt",
    "pause",
    "caps lock",
    "esc",
    "spacebar",
    "page up",
    "page down",
    "end",
    "home",
    "left",
    "up",
    "right",
    "down",
    "select",
    "print",
    "execute",
    "print screen",
    "insert",
    "delete",
    "help",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "left windows",
    "right windows",
    "applications",
    "sleep",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "*",
    "+",
    "separator",
    "-",
    "decimal",
    "/",
    "f1",
    "f2",
    "f3",
    "f4",
    "f5",
    "f6",
    "f7",
    "f8",
    "f9",
    "f10",
    "f11",
    "f12",
    "f13",
    "f14",
    "f15",
    "f16",
    "f17",
    "f18",
    "f19",
    "f20",
    "f21",
    "f22",
    "f23",
    "f24",
    "num lock",
    "scroll lock",
    "left shift",
    "right shift",
    "left ctrl",
    "right ctrl",
    "left menu",
    "right menu",
    "browser back",
    "browser forward",
    "browser refresh",
    "browser stop",
    "browser search key",
    "browser favorites",
    "browser start and home",
    "volume mute",
    "volume down",
    "volume up",
    "next track",
    "previous track",
    "stop media",
    "play/pause media",
    "start mail",
    "select media",
    "start application 1",
    "start application 2",
    "+",
    ",",
    "-",
    ".",
    "ime process",
    "attn",
    "crsel",
    "exsel",
    "erase eof",
    "play",
    "zoom",
    "reserved ",
    "pa1",
    "clear",
)


def is_pressed(key):
    """
    Check if a key is pessed. Valid keys: 
    """
    if key not in VALID_KEYS:
        raise ValueError("Invalid key: {}".format(key))
    return keyboard.is_pressed(key)


def get_pressed_keys():
    keys = []
    for key in VALID_KEYS:
        if is_pressed(key):
            keys.append(key)
    return keys
